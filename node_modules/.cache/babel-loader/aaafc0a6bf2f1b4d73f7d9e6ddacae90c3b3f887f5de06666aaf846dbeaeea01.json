{"ast":null,"code":"export var processLazyPreloader = function processLazyPreloader(swiper, imageEl) {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  var slideSelector = function slideSelector() {\n    return swiper.isElement ? \"swiper-slide\" : \".\".concat(swiper.params.slideClass);\n  };\n  var slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    var lazyEl = slideEl.querySelector(\".\".concat(swiper.params.lazyPreloaderClass));\n    if (lazyEl) lazyEl.remove();\n  }\n};\nvar unlazy = function unlazy(swiper, index) {\n  if (!swiper.slides[index]) return;\n  var imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport var preload = function preload(swiper) {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  var amount = swiper.params.lazyPreloadPrevNext;\n  var len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  var slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  var activeIndex = swiper.activeIndex;\n  var slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (var i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      var realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (var _i = Math.max(slideIndexLastInView - amount, 0); _i <= Math.min(slideIndexLastInView + amount, len - 1); _i += 1) {\n      if (_i !== activeIndex && _i > slideIndexLastInView) unlazy(swiper, _i);\n    }\n  }\n};","map":{"version":3,"names":["processLazyPreloader","swiper","imageEl","destroyed","params","slideSelector","isElement","slideClass","slideEl","closest","lazyEl","querySelector","lazyPreloaderClass","remove","unlazy","index","slides","removeAttribute","preload","amount","lazyPreloadPrevNext","len","length","Math","min","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","slideIndexLastInView","rewind","i","realIndex","max"],"sources":["C:/Users/Adminstrator/Downloads/React Js/portfolio_first/my_portfolio/node_modules/swiper/shared/process-lazy-preloader.js"],"sourcesContent":["export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};"],"mappings":"AAAA,OAAO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,MAAM,EAAEC,OAAO,EAAK;EACvD,IAAI,CAACD,MAAM,IAAIA,MAAM,CAACE,SAAS,IAAI,CAACF,MAAM,CAACG,MAAM,EAAE;EACnD,IAAMC,aAAa,GAAG,SAAhBA,aAAa;IAAA,OAASJ,MAAM,CAACK,SAAS,+BAAwBL,MAAM,CAACG,MAAM,CAACG,UAAU,CAAE;EAAA;EAC9F,IAAMC,OAAO,GAAGN,OAAO,CAACO,OAAO,CAACJ,aAAa,EAAE,CAAC;EAChD,IAAIG,OAAO,EAAE;IACX,IAAME,MAAM,GAAGF,OAAO,CAACG,aAAa,YAAKV,MAAM,CAACG,MAAM,CAACQ,kBAAkB,EAAG;IAC5E,IAAIF,MAAM,EAAEA,MAAM,CAACG,MAAM,EAAE;EAC7B;AACF,CAAC;AACD,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAIb,MAAM,EAAEc,KAAK,EAAK;EAChC,IAAI,CAACd,MAAM,CAACe,MAAM,CAACD,KAAK,CAAC,EAAE;EAC3B,IAAMb,OAAO,GAAGD,MAAM,CAACe,MAAM,CAACD,KAAK,CAAC,CAACJ,aAAa,CAAC,kBAAkB,CAAC;EACtE,IAAIT,OAAO,EAAEA,OAAO,CAACe,eAAe,CAAC,SAAS,CAAC;AACjD,CAAC;AACD,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGjB,MAAM,EAAI;EAC/B,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACE,SAAS,IAAI,CAACF,MAAM,CAACG,MAAM,EAAE;EACnD,IAAIe,MAAM,GAAGlB,MAAM,CAACG,MAAM,CAACgB,mBAAmB;EAC9C,IAAMC,GAAG,GAAGpB,MAAM,CAACe,MAAM,CAACM,MAAM;EAChC,IAAI,CAACD,GAAG,IAAI,CAACF,MAAM,IAAIA,MAAM,GAAG,CAAC,EAAE;EACnCA,MAAM,GAAGI,IAAI,CAACC,GAAG,CAACL,MAAM,EAAEE,GAAG,CAAC;EAC9B,IAAMI,aAAa,GAAGxB,MAAM,CAACG,MAAM,CAACqB,aAAa,KAAK,MAAM,GAAGxB,MAAM,CAACyB,oBAAoB,EAAE,GAAGH,IAAI,CAACI,IAAI,CAAC1B,MAAM,CAACG,MAAM,CAACqB,aAAa,CAAC;EACrI,IAAMG,WAAW,GAAG3B,MAAM,CAAC2B,WAAW;EACtC,IAAMC,oBAAoB,GAAGD,WAAW,GAAGH,aAAa,GAAG,CAAC;EAC5D,IAAIxB,MAAM,CAACG,MAAM,CAAC0B,MAAM,EAAE;IACxB,KAAK,IAAIC,CAAC,GAAGH,WAAW,GAAGT,MAAM,EAAEY,CAAC,IAAIF,oBAAoB,GAAGV,MAAM,EAAEY,CAAC,IAAI,CAAC,EAAE;MAC7E,IAAMC,SAAS,GAAG,CAACD,CAAC,GAAGV,GAAG,GAAGA,GAAG,IAAIA,GAAG;MACvC,IAAIW,SAAS,KAAKJ,WAAW,IAAII,SAAS,GAAGH,oBAAoB,EAAEf,MAAM,CAACb,MAAM,EAAE+B,SAAS,CAAC;IAC9F;EACF,CAAC,MAAM;IACL,KAAK,IAAID,EAAC,GAAGR,IAAI,CAACU,GAAG,CAACJ,oBAAoB,GAAGV,MAAM,EAAE,CAAC,CAAC,EAAEY,EAAC,IAAIR,IAAI,CAACC,GAAG,CAACK,oBAAoB,GAAGV,MAAM,EAAEE,GAAG,GAAG,CAAC,CAAC,EAAEU,EAAC,IAAI,CAAC,EAAE;MACtH,IAAIA,EAAC,KAAKH,WAAW,IAAIG,EAAC,GAAGF,oBAAoB,EAAEf,MAAM,CAACb,MAAM,EAAE8B,EAAC,CAAC;IACtE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}